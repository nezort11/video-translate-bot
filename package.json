{
  "name": "test-yandex-serverless-container",
  "packageManager": "yarn@3.4.1",
  "type": "module",
  "engines": {
    "node": "18"
  },
  "scripts": {
    "pre:nvm": "bash -c 'source $HOME/.nvm/nvm.sh && nvm use && '\"$0\"",
    "pre:env": "bash -c 'source ./.env && '\"$0\"",
    "": "",
    "command": "node --experimental-specifier-resolution=node --no-warnings",
    "dev": "yarn pre:nvm 'NODE_ENV=development yarn nodemon --exec \"yarn command --inspect --loader ts-node/esm\" --watch \"./.env\" --watch \"./src\" ./src/index.ts'",
    "dev:prod": "yarn pre:nvm 'NODE_ENV=production yarn nodemon --exec \"yarn command --inspect --loader ts-node/esm\" --watch \"./.env\" --watch \"./src\" ./src/index.ts'",
    "start": "NODE_ENV=production yarn command ./build/index.js",
    "start:dev": "NODE_ENV=development yarn command ./build/index.js",
    "-dev": "yarn pre:nvm 'yarn webhook:reset && yarn nodemon --exec \"yarn command --loader ts-node/esm\" ./src/main.ts'",
    "handler": "yarn command ./build/handler.js",
    "build": "yarn tsc --build",
    "docker:dev": "docker compose up",
    "-yc:registry:create": "yarn pre:env 'yc container registry create --name $REGISTRY_NAME'",
    "-yc:registry:configure": "yc container registry configure-docker",
    "-yc:registry:publish": "yarn pre:env 'docker image push $IMAGE_NAME'",
    "-yc:container:create": "yarn pre:env 'yc serverless container create --name $CONTAINER_NAME'",
    "-yc:container:deploy": "yarn pre:env 'yc serverless container revision deploy --container-name $CONTAINER_NAME --image $IMAGE_NAME --cores 1 --memory 1GB --concurrency 1 --execution-timeout 30s --service-account-id $SERVICE_ACCOUNT_ID && yarn webhook:set'",
    "-webhook:set": "yarn pre:env 'yarn telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"https://$CONTAINER_DOMAIN\\\" }\"'",
    "-webhook:reset": "yarn pre:env 'yarn telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"\\\" }\"'",
    "-ci": "yarn docker:build",
    "-cd": "yarn ci && yarn yc:registry:publish && yarn yc:container:deploy",
    "ssh": "ssh raspberrypi",
    "ssh2": "yarn pre:env 'sshpass -p $SERVER_PASSWORD ssh timeweb'",
    "purge": "yarn pre:env 'sshpass -p $SERVER_PASSWORD ssh timeweb \"cd /root/yandex-voice-translate-bot && ls --almost-all | grep -xv node_modules | xargs rm -rf\"'",
    "deploy": "rsync -avzc --exclude=.DS_Store --exclude=.git --exclude=node_modules --exclude=build --exclude=.yarn/cache --exclude='*.mp3' --exclude='*.mp4' . raspberrypi:~/yandex-voice-translate-bot",
    "deploy2": "yarn pre:env 'sshpass -p $SERVER_PASSWORD rsync -avzc --exclude=.git --exclude=node_modules --exclude=build --exclude=.yarn/install-state.gz --exclude=.yarn/cache --exclude=*.mp3 --exclude=*.mp4 . timeweb:/root/yandex-voice-translate-bot'",
    "deploy:ffmpeg": "yarn pre:env 'sshpass -p $SERVER_PASSWORD rsync -avzc ../ffmpeg-dist timeweb:/root/ffmpeg-dist'",
    "docker:build": "docker compose -f compose.yml build && yarn docker:image:clean",
    "docker:up": "docker compose -f compose.yml up",
    "docker:up:daemon": "docker compose -f compose.yml up --detach",
    "docker:logs": "docker compose -f compose.yml logs -f",
    "docker:top": "docker compose -f compose.yml top",
    "docker:shell": "docker compose -f compose.yml exec yandex_voice_translate_bot bash",
    "docker:run": "docker compose -f compose.yml run -it yandex_voice_translate_bot bash",
    "docker:down": "docker compose -f compose.yml down",
    "docker:stop": "docker compose -f compose.yml stop",
    "docker:restart": "yarn docker:down && yarn docker:up",
    "docker:down:clean": "docker compose -f ./compose.yml down --rmi all --volumes",
    "docker:image:clean": "docker image rm -f $(docker image ls -aqf dangling=true)",
    "docker:container:clean": "docker rm $(docker ps --filter=status=exited --filter=status=dead -q)",
    "docker:cache:info": "docker system df",
    "docker:cache:clean": "docker system prune --volumes",
    "yarn:cache:clean": "rm -rf ~/.yarn/cache && rm -rf ~/Library/Caches/Yarn/v6"
  },
  "dependencies": {
    "@ffmpeg/core": "0.11.0",
    "@ffmpeg/ffmpeg": "0.11.6",
    "@iamtraction/google-translate": "2.0.1",
    "@sentry/node": "7.53.1",
    "axios": "1.3.4",
    "cheerio": "1.0.0-rc.12",
    "dotenv": "16.0.3",
    "express": "4.18.2",
    "form-data": "4.0.0",
    "get-audio-duration": "3.1.1",
    "get-video-duration": "4.1.0",
    "input": "1.0.1",
    "protobufjs": "7.2.2",
    "telegraf": "4.11.2",
    "telegraf-throttler": "0.6.0",
    "telegram": "2.15.15",
    "ytdl-core": "https://github.com/khlevon/node-ytdl-core.git#v4.11.4-patch.1"
  },
  "devDependencies": {
    "@types/express": "4.17.17",
    "@types/node": "18.15.3",
    "nodemon": "2.0.20",
    "ts-node": "10.9.1",
    "typescript": "4.9.5"
  },
  "resolutions": {
    "@ffmpeg/core@0.11.0": "patch:@ffmpeg/core@npm%3A0.11.0#./.yarn/patches/@ffmpeg-core-npm-0.11.0-514ee933c9.patch"
  }
}
