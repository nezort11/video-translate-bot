{
  "name": "yandex-video-translate-bot",
  "volta": {
    "node": "18.20.2"
  },
  "packageManager": "pnpm@8.3.1",
  "type": "module",
  "engines": {
    "node": ">=18"
  },
  "scripts": {
    "_pre:nvm": "bash -c \"source $HOME/.nvm/nvm.sh && nvm use && $script\"",
    "_command": "DEBUG='*' node --experimental-specifier-resolution=node --no-warnings",
    "_dev:command": "pnpm _command --inspect --loader ts-node/esm ./src/index.ts",
    "_dev": "NODE_ENV='development' pnpm _dev:command",
    "_dev:prod": "NODE_ENV='production' pnpm _dev:command",
    "command": "node --experimental-specifier-resolution=node --no-warnings",
    "_cli": "NODE_ENV=development node --experimental-specifier-resolution=node --no-warnings --loader ts-node/esm ./src/cli.ts $url",
    "cli": "pnpm _cli",
    "dev": "pnpm _dev",
    "dev:prod": "script='NODE_ENV=production pnpm _dev' pnpm _pre:nvm",
    "start": "NODE_ENV=production pnpm _command ./build/index.js",
    "start:dev": "NODE_ENV=development pnpm _command ./build/index.js",
    "_dev:deamon:command": "pnpm nodemon --exec \"pnpm _command --inspect --loader ts-node/esm\" --watch \"./.env\" --watch \"./src\" ./src/index.ts",
    "dev:deamon": "pnpm _pre:nvm 'NODE_ENV=development pnpm _dev:deamon:command'",
    "dev:prod:deamon": "pnpm _pre:nvm 'NODE_ENV=production pnpm _dev:deamon:command'",
    "": "",
    "-pre:env": "bash -c 'source ./.env && '\"$0\"",
    "-dev": "pnpm pre:nvm 'pnpm webhook:reset && pnpm nodemon --exec \"pnpm command --loader ts-node/esm\" ./src/main.ts'",
    "handler": "pnpm command ./build/handler.js",
    "docker:dev": "docker compose up",
    "-yc:registry:create": "pnpm pre:env 'yc container registry create --name $REGISTRY_NAME'",
    "-yc:registry:configure": "yc container registry configure-docker",
    "-yc:registry:publish": "pnpm pre:env 'docker image push $IMAGE_NAME'",
    "-yc:container:create": "pnpm pre:env 'yc serverless container create --name $CONTAINER_NAME'",
    "-yc:container:deploy": "pnpm pre:env 'yc serverless container revision deploy --container-name $CONTAINER_NAME --image $IMAGE_NAME --cores 1 --memory 1GB --concurrency 1 --execution-timeout 30s --service-account-id $SERVICE_ACCOUNT_ID && pnpm webhook:set'",
    "-webhook:set": "pnpm pre:env 'pnpm telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"https://$CONTAINER_DOMAIN\\\" }\"'",
    "-webhook:reset": "pnpm pre:env 'pnpm telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"\\\" }\"'",
    "-ci": "pnpm docker:build",
    "-cd": "pnpm ci && pnpm yc:registry:publish && pnpm yc:container:deploy",
    "ssh": "ssh raspberrypi",
    "ssh2": "pnpm pre:env 'sshpass -p $SERVER_PASSWORD ssh timeweb'",
    "purge": "pnpm pre:env 'sshpass -p $SERVER_PASSWORD ssh timeweb \"cd /root/yandex-voice-translate-bot && ls --almost-all | grep -xv node_modules | xargs rm -rf\"'",
    "deploy": "rsync -avzc --exclude=.DS_Store --exclude=.git --exclude=node_modules --exclude=build --exclude=.pnpm/cache --exclude='*.mp3' --exclude='*.mp4' --exclude='*.log' . raspberrypi2:~/yandex-voice-translate-bot",
    "deploy2": "pnpm pre:env 'sshpass -p $SERVER_PASSWORD rsync -avzc --exclude=.git --exclude=node_modules --exclude=build --exclude=.pnpm/install-state.gz --exclude=.pnpm/cache --exclude=*.mp3 --exclude=*.mp4 . timeweb:/root/yandex-voice-translate-bot'",
    "deploy:ffmpeg": "pnpm pre:env 'sshpass -p $SERVER_PASSWORD rsync -avzc ../ffmpeg-dist timeweb:/root/ffmpeg-dist'",
    "build": "pnpm tsc --build",
    "docker": "docker compose --env-file ./.env --env-file ./image-translate/.env -f ./compose.yml",
    "docker:build": "pnpm docker build && pnpm docker:down && pnpm docker:image:clean",
    "docker:up": "pnpm docker up --detach",
    "docker:logs": "pnpm docker logs --follow --timestamps --since='6h' --tail='1000'",
    "docker:top": "pnpm docker top",
    "docker:shell": "pnpm docker exec yandex_voice_translate_bot bash",
    "docker:run": "pnpm docker run -it yandex_voice_translate_bot bash",
    "docker:down": "pnpm docker down",
    "docker:stop": "pnpm docker stop",
    "docker:restart": "pnpm docker:down && pnpm docker:up",
    "docker:down:clean": "pnpm docker down --rmi=all --volumes",
    "docker:image:clean": "docker image rm -f $(docker image ls -aqf dangling=true) || echo ''",
    "docker:container:clean": "docker rm $(docker ps --filter=status=exited --filter=status=dead -q)",
    "docker:cache:info": "docker system df",
    "docker:cache:clean": "docker system prune --volumes",
    "yarn:cache:clean": "rm -rf ~/.yarn/cache && rm -rf ~/Library/Caches/Yarn/v6"
  },
  "dependencies": {
    "@ffmpeg/core": "0.11.0",
    "@ffmpeg/ffmpeg": "0.11.6",
    "@iamtraction/google-translate": "2.0.1",
    "@sentry/node": "8.38.0",
    "abort-controller": "^3.0.0",
    "axios": "1.3.4",
    "bottleneck": "^2.19.5",
    "cheerio": "1.0.0-rc.12",
    "debug": "^4.3.4",
    "dotenv": "16.0.3",
    "express": "4.18.2",
    "form-data": "4.0.0",
    "get-audio-duration": "3.1.1",
    "get-video-duration": "4.1.0",
    "input": "1.0.1",
    "link-preview-js": "3.0.5",
    "lodash": "4.17.21",
    "moment": "2.29.4",
    "node-persist": "3.1.3",
    "p-timeout": "^6.1.2",
    "pino": "8.14.1",
    "pino-pretty": "10.0.0",
    "protobufjs": "7.2.2",
    "telegraf": "4.11.2",
    "telegraf-throttler": "0.6.0",
    "telegram": "2.15.15",
    "@distube/ytdl-core": "4.14.4"
  },
  "devDependencies": {
    "@types/debug": "^4.1.12",
    "@types/express": "4.17.17",
    "@types/lodash": "^4",
    "@types/node": "18.15.3",
    "@types/node-persist": "^3",
    "husky": "8.0.3",
    "nodemon": "2.0.20",
    "ts-node": "10.9.1",
    "typescript": "5.4.5",
    "yarnhook": "0.6.0"
  },
  "pnpm": {
    "patchedDependencies": {
      "@ffmpeg/core@0.11.0": "patches/@ffmpeg-core-npm-0.11.0-514ee933c9.patch"
    }
  },
  "husky": {
    "hooks": {
      "post-checkout": "yarnhook",
      "post-merge": "yarnhook",
      "post-rewrite": "yarnhook"
    }
  }
}
